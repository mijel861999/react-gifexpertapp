{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAsCC,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAgBA,OACI,sBAAMC,SAVW,SAAAC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAAP,GAEtBF,EAAeE,EAAEQ,OAAOF,a,+BCTnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAWH,GADxF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,sBAAKgB,UAAU,yCAAf,UACI,qBACIC,IAAKjB,EACLkB,IAAKR,IAET,4BAAIA,QCNHS,EAAU,SAAC,GAAiB,IAAfrB,EAAc,EAAdA,SAEtB,ECFwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAW,WACP1B,EAAQC,GACH0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,IAEIC,EDf0BK,CAAa5B,GAAjCa,EAAb,EAAQN,KAAae,EAArB,EAAqBA,QAGrB,OACI,qCACI,6BAAMtB,IAELsB,GAAW,2CAEZ,qBAAKJ,UAAU,YAAf,SAEYL,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEf5BkB,EAAe,WAGxB,MAAoC3C,mBAAS,CAAC,kBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAQA,OACI,qCACI,gDACA,uBAEA,cAAC,EAAD,CACIA,cAAeA,IAInB,6BACM6C,EAAWrB,KAAK,SAACT,GAAD,OACd,cAAC,EAAD,CAEIA,SAAYA,GADPA,YCvB7B+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.dc40083b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    \n    const [ inputValue, setInputValue ] = useState('');\n    \n    const handleInputChange = e => {\n        // console.log(e.target.value);\n        setInputValue( e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\" \n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async( category ) => {\n    const url =  `https://api.giphy.com/v1/gifs/search?api_key=8TfTvddTOFGysB2GoqdibDv8MYOwtahR&q=${encodeURI( category) }&limit=10`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","// import React, { useState, useEffect } from 'react';\n\nexport const GifGridItem = ( {id, title, url} ) => {\n    console.log(id, title, url);\n\n    return(\n        <div className=\"card animate__animated animate__bounce\">\n            <img \n                src={url} \n                alt={title} \n            />\n            <p>{title}</p>\n        </div>\n    )\n}","// import React, {useState, useEffect} from 'react';\n// import { getGifs } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) =>{\n\n    const { data:images, loading } = useFetchGifs(category);\n    \n\n    return(\n        <>\n            <h3>{ category }</h3>\n\n            {loading && <p>Loading...</p>}\n\n            <div className=\"card-grid\">\n                    {\n                        images.map( (img) =>(\n                            <GifGridItem\n                                key={img.id} \n                                {...img}\n                            />\n                        )\n                        )\n                    }\n            </div>\n        </>\n    )\n}","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\n\nexport const useFetchGifs = (category) =>{\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () =>{\n        getGifs(category)\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false,\n                });\n            })\n\n    }, [])\n\n    return state;\n}","import React, { useState} from 'react';\nimport {AddCategory} from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One Punch Man', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['One Punch Man']);\n\n    // const handleAdd = () =>{\n    //     // setCategories([...categories, 'Naruto']);\n    //     // setCategories(['Naruto', ...categories]);\n    //     setCategories( cats => [...cats, 'Naruto']);\n    // }\n\n    return (\n        <>\n            <h2>Gif Expert App</h2>\n            <hr />\n\n            <AddCategory \n                setCategories={setCategories}\n            />\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\n\n            <ol>\n                { categories.map( (category) => (\n                    <GifGrid\n                        key={category} \n                        category = {category}\n                    />\n                ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}